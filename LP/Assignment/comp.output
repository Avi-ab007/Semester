Terminals unused in grammar

   NOT
   TRUE
   FALSE
   '^'


State 15 conflicts: 6 shift/reduce
State 28 conflicts: 1 shift/reduce
State 29 conflicts: 7 shift/reduce


Grammar

    0 $accept: begin $end

    1 begin: prog

    2 prog: prog construct
    3     | construct

    4 construct: block
    5          | IF '(' boolean ')' block
    6          | WHILE '(' boolean ')' block
    7          | IF '(' boolean ')' block ELSE block
    8          | SWITCH '(' expr ')' '{' caseList '}'

    9 block: '{' list '}'
   10      | '{' construct '}'
   11      | '{' prog '}'
   12      | list

   13 caseList: caseList CASE expr ':' block
   14         | CASE expr ':' block

   15 list: stmt
   16     | list stmt
   17     | list error '\n'

   18 stmt: ';'
   19     | expr ';'
   20     | dec ';'
   21     | identifier '=' expr ';'
   22     | dec '=' expr ';'
   23     | identifier PE expr ';'
   24     | identifier ME expr ';'
   25     | identifier IE expr ';'
   26     | identifier DE expr ';'
   27     | identifier INCR ';'
   28     | identifier DECR ';'

   29 dec: TYPES identifier

   30 boolean: expr REL_OPT expr
   31        | boolean OR boolean
   32        | boolean AND boolean

   33 expr: '(' expr ')'
   34     | expr '+' expr
   35     | expr '-' expr
   36     | expr '*' expr
   37     | expr '/' expr
   38     | expr '%' expr
   39     | expr '@' expr
   40     | expr BOR expr
   41     | expr BAND expr
   42     | expr BXOR expr
   43     | identifier
   44     | number

   45 identifier: ID

   46 number: DIGIT
   47       | FLOAT


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 17
'%' (37) 38
'(' (40) 5 6 7 8 33
')' (41) 5 6 7 8 33
'*' (42) 36
'+' (43) 34
'-' (45) 35
'/' (47) 37
':' (58) 13 14
';' (59) 18 19 20 21 22 23 24 25 26 27 28
'=' (61) 21 22
'@' (64) 39
'^' (94)
'{' (123) 8 9 10 11
'}' (125) 8 9 10 11
error (256) 17
DIGIT (258) 46
FLOAT (259) 47
ID (260) 45
IF (261) 5 7
ELSE (262) 7
WHILE (263) 6
TYPES (264) 29
REL_OPT (265) 30
OR (266) 31
AND (267) 32
NOT (268)
TRUE (269)
FALSE (270)
PE (271) 23
CASE (272) 13 14
SWITCH (273) 8
INCR (274) 27
DECR (275) 28
BOR (276) 40
BAND (277) 41
BXOR (278) 42
ME (279) 24
IE (280) 25
DE (281) 26


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
begin (43)
    on left: 1, on right: 0
prog (44)
    on left: 2 3, on right: 1 2 11
construct (45)
    on left: 4 5 6 7 8, on right: 2 3 10
block (46)
    on left: 9 10 11 12, on right: 4 5 6 7 13 14
caseList (47)
    on left: 13 14, on right: 8 13
list (48)
    on left: 15 16 17, on right: 9 12 16 17
stmt (49)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 15 16
dec (50)
    on left: 29, on right: 20 22
boolean (51)
    on left: 30 31 32, on right: 5 6 7 31 32
expr (52)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44, on right: 8 13 14
    19 21 22 23 24 25 26 30 33 34 35 36 37 38 39 40 41 42
identifier (53)
    on left: 45, on right: 21 23 24 25 26 27 28 29 43
number (54)
    on left: 46 47, on right: 44


State 0

    0 $accept: . begin $end
    1 begin: . prog
    2 prog: . prog construct
    3     | . construct
    4 construct: . block
    5          | . IF '(' boolean ')' block
    6          | . WHILE '(' boolean ')' block
    7          | . IF '(' boolean ')' block ELSE block
    8          | . SWITCH '(' expr ')' '{' caseList '}'
    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT   shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    TYPES   shift, and go to state 6
    SWITCH  shift, and go to state 7
    ';'     shift, and go to state 8
    '('     shift, and go to state 9
    '{'     shift, and go to state 10

    begin       go to state 11
    prog        go to state 12
    construct   go to state 13
    block       go to state 14
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 1

   46 number: DIGIT .

    $default  reduce using rule 46 (number)


State 2

   47 number: FLOAT .

    $default  reduce using rule 47 (number)


State 3

   45 identifier: ID .

    $default  reduce using rule 45 (identifier)


State 4

    5 construct: IF . '(' boolean ')' block
    7          | IF . '(' boolean ')' block ELSE block

    '('  shift, and go to state 21


State 5

    6 construct: WHILE . '(' boolean ')' block

    '('  shift, and go to state 22


State 6

   29 dec: TYPES . identifier
   45 identifier: . ID

    ID  shift, and go to state 3

    identifier  go to state 23


State 7

    8 construct: SWITCH . '(' expr ')' '{' caseList '}'

    '('  shift, and go to state 24


State 8

   18 stmt: ';' .

    $default  reduce using rule 18 (stmt)


State 9

   33 expr: . '(' expr ')'
   33     | '(' . expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 25
    identifier  go to state 26
    number      go to state 20


State 10

    2 prog: . prog construct
    3     | . construct
    4 construct: . block
    5          | . IF '(' boolean ')' block
    6          | . WHILE '(' boolean ')' block
    7          | . IF '(' boolean ')' block ELSE block
    8          | . SWITCH '(' expr ')' '{' caseList '}'
    9 block: . '{' list '}'
    9      | '{' . list '}'
   10      | . '{' construct '}'
   10      | '{' . construct '}'
   11      | . '{' prog '}'
   11      | '{' . prog '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT   shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    TYPES   shift, and go to state 6
    SWITCH  shift, and go to state 7
    ';'     shift, and go to state 8
    '('     shift, and go to state 9
    '{'     shift, and go to state 10

    prog        go to state 27
    construct   go to state 28
    block       go to state 14
    list        go to state 29
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 11

    0 $accept: begin . $end

    $end  shift, and go to state 30


State 12

    1 begin: prog .  [$end]
    2 prog: prog . construct
    4 construct: . block
    5          | . IF '(' boolean ')' block
    6          | . WHILE '(' boolean ')' block
    7          | . IF '(' boolean ')' block ELSE block
    8          | . SWITCH '(' expr ')' '{' caseList '}'
    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT   shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    TYPES   shift, and go to state 6
    SWITCH  shift, and go to state 7
    ';'     shift, and go to state 8
    '('     shift, and go to state 9
    '{'     shift, and go to state 10

    $default  reduce using rule 1 (begin)

    construct   go to state 31
    block       go to state 14
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 13

    3 prog: construct .

    $default  reduce using rule 3 (prog)


State 14

    4 construct: block .

    $default  reduce using rule 4 (construct)


State 15

   12 block: list .  [$end, DIGIT, FLOAT, ID, IF, ELSE, WHILE, TYPES, CASE, SWITCH, ';', '(', '{', '}']
   16 list: list . stmt
   17     | list . error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    error  shift, and go to state 32
    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9

    $end    reduce using rule 12 (block)
    DIGIT   [reduce using rule 12 (block)]
    FLOAT   [reduce using rule 12 (block)]
    ID      [reduce using rule 12 (block)]
    IF      reduce using rule 12 (block)
    ELSE    reduce using rule 12 (block)
    WHILE   reduce using rule 12 (block)
    TYPES   [reduce using rule 12 (block)]
    CASE    reduce using rule 12 (block)
    SWITCH  reduce using rule 12 (block)
    ';'     [reduce using rule 12 (block)]
    '('     [reduce using rule 12 (block)]
    '{'     reduce using rule 12 (block)
    '}'     reduce using rule 12 (block)

    stmt        go to state 33
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 16

   15 list: stmt .

    $default  reduce using rule 15 (list)


State 17

   20 stmt: dec . ';'
   22     | dec . '=' expr ';'

    '='  shift, and go to state 34
    ';'  shift, and go to state 35


State 18

   19 stmt: expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 44
    '@'   shift, and go to state 45


State 19

   21 stmt: identifier . '=' expr ';'
   23     | identifier . PE expr ';'
   24     | identifier . ME expr ';'
   25     | identifier . IE expr ';'
   26     | identifier . DE expr ';'
   27     | identifier . INCR ';'
   28     | identifier . DECR ';'
   43 expr: identifier .  [BOR, BAND, BXOR, '+', '-', '*', '/', '%', ';', '@']

    PE    shift, and go to state 46
    INCR  shift, and go to state 47
    DECR  shift, and go to state 48
    '='   shift, and go to state 49
    ME    shift, and go to state 50
    IE    shift, and go to state 51
    DE    shift, and go to state 52

    $default  reduce using rule 43 (expr)


State 20

   44 expr: number .

    $default  reduce using rule 44 (expr)


State 21

    5 construct: IF '(' . boolean ')' block
    7          | IF '(' . boolean ')' block ELSE block
   30 boolean: . expr REL_OPT expr
   31        | . boolean OR boolean
   32        | . boolean AND boolean
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    boolean     go to state 53
    expr        go to state 54
    identifier  go to state 26
    number      go to state 20


State 22

    6 construct: WHILE '(' . boolean ')' block
   30 boolean: . expr REL_OPT expr
   31        | . boolean OR boolean
   32        | . boolean AND boolean
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    boolean     go to state 55
    expr        go to state 54
    identifier  go to state 26
    number      go to state 20


State 23

   29 dec: TYPES identifier .

    $default  reduce using rule 29 (dec)


State 24

    8 construct: SWITCH '(' . expr ')' '{' caseList '}'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 56
    identifier  go to state 26
    number      go to state 20


State 25

   33 expr: '(' expr . ')'
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45
    ')'   shift, and go to state 57


State 26

   43 expr: identifier .

    $default  reduce using rule 43 (expr)


State 27

    2 prog: prog . construct
    4 construct: . block
    5          | . IF '(' boolean ')' block
    6          | . WHILE '(' boolean ')' block
    7          | . IF '(' boolean ')' block ELSE block
    8          | . SWITCH '(' expr ')' '{' caseList '}'
    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   11      | '{' prog . '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT   shift, and go to state 1
    FLOAT   shift, and go to state 2
    ID      shift, and go to state 3
    IF      shift, and go to state 4
    WHILE   shift, and go to state 5
    TYPES   shift, and go to state 6
    SWITCH  shift, and go to state 7
    ';'     shift, and go to state 8
    '('     shift, and go to state 9
    '{'     shift, and go to state 10
    '}'     shift, and go to state 58

    construct   go to state 31
    block       go to state 14
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 28

    3 prog: construct .  [DIGIT, FLOAT, ID, IF, WHILE, TYPES, SWITCH, ';', '(', '{', '}']
   10 block: '{' construct . '}'

    '}'  shift, and go to state 59

    '}'       [reduce using rule 3 (prog)]
    $default  reduce using rule 3 (prog)


State 29

    9 block: '{' list . '}'
   12      | list .  [DIGIT, FLOAT, ID, IF, WHILE, TYPES, SWITCH, ';', '(', '{', '}']
   16 list: list . stmt
   17     | list . error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    error  shift, and go to state 32
    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9
    '}'    shift, and go to state 60

    DIGIT   [reduce using rule 12 (block)]
    FLOAT   [reduce using rule 12 (block)]
    ID      [reduce using rule 12 (block)]
    IF      reduce using rule 12 (block)
    WHILE   reduce using rule 12 (block)
    TYPES   [reduce using rule 12 (block)]
    SWITCH  reduce using rule 12 (block)
    ';'     [reduce using rule 12 (block)]
    '('     [reduce using rule 12 (block)]
    '{'     reduce using rule 12 (block)
    '}'     [reduce using rule 12 (block)]

    stmt        go to state 33
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 30

    0 $accept: begin $end .

    $default  accept


State 31

    2 prog: prog construct .

    $default  reduce using rule 2 (prog)


State 32

   17 list: list error . '\n'

    '\n'  shift, and go to state 61


State 33

   16 list: list stmt .

    $default  reduce using rule 16 (list)


State 34

   22 stmt: dec '=' . expr ';'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 62
    identifier  go to state 26
    number      go to state 20


State 35

   20 stmt: dec ';' .

    $default  reduce using rule 20 (stmt)


State 36

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   40     | expr BOR . expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 63
    identifier  go to state 26
    number      go to state 20


State 37

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   41     | expr BAND . expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 64
    identifier  go to state 26
    number      go to state 20


State 38

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   42     | expr BXOR . expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 65
    identifier  go to state 26
    number      go to state 20


State 39

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   34     | expr '+' . expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 66
    identifier  go to state 26
    number      go to state 20


State 40

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   35     | expr '-' . expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 67
    identifier  go to state 26
    number      go to state 20


State 41

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   36     | expr '*' . expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 68
    identifier  go to state 26
    number      go to state 20


State 42

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   37     | expr '/' . expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 69
    identifier  go to state 26
    number      go to state 20


State 43

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   38     | expr '%' . expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 70
    identifier  go to state 26
    number      go to state 20


State 44

   19 stmt: expr ';' .

    $default  reduce using rule 19 (stmt)


State 45

   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   39     | expr '@' . expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 71
    identifier  go to state 26
    number      go to state 20


State 46

   23 stmt: identifier PE . expr ';'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 72
    identifier  go to state 26
    number      go to state 20


State 47

   27 stmt: identifier INCR . ';'

    ';'  shift, and go to state 73


State 48

   28 stmt: identifier DECR . ';'

    ';'  shift, and go to state 74


State 49

   21 stmt: identifier '=' . expr ';'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 75
    identifier  go to state 26
    number      go to state 20


State 50

   24 stmt: identifier ME . expr ';'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 76
    identifier  go to state 26
    number      go to state 20


State 51

   25 stmt: identifier IE . expr ';'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 77
    identifier  go to state 26
    number      go to state 20


State 52

   26 stmt: identifier DE . expr ';'
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 78
    identifier  go to state 26
    number      go to state 20


State 53

    5 construct: IF '(' boolean . ')' block
    7          | IF '(' boolean . ')' block ELSE block
   31 boolean: boolean . OR boolean
   32        | boolean . AND boolean

    OR   shift, and go to state 79
    AND  shift, and go to state 80
    ')'  shift, and go to state 81


State 54

   30 boolean: expr . REL_OPT expr
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    REL_OPT  shift, and go to state 82
    BOR      shift, and go to state 36
    BAND     shift, and go to state 37
    BXOR     shift, and go to state 38
    '+'      shift, and go to state 39
    '-'      shift, and go to state 40
    '*'      shift, and go to state 41
    '/'      shift, and go to state 42
    '%'      shift, and go to state 43
    '@'      shift, and go to state 45


State 55

    6 construct: WHILE '(' boolean . ')' block
   31 boolean: boolean . OR boolean
   32        | boolean . AND boolean

    OR   shift, and go to state 79
    AND  shift, and go to state 80
    ')'  shift, and go to state 83


State 56

    8 construct: SWITCH '(' expr . ')' '{' caseList '}'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45
    ')'   shift, and go to state 84


State 57

   33 expr: '(' expr ')' .

    $default  reduce using rule 33 (expr)


State 58

   11 block: '{' prog '}' .

    $default  reduce using rule 11 (block)


State 59

   10 block: '{' construct '}' .

    $default  reduce using rule 10 (block)


State 60

    9 block: '{' list '}' .

    $default  reduce using rule 9 (block)


State 61

   17 list: list error '\n' .

    $default  reduce using rule 17 (list)


State 62

   22 stmt: dec '=' expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 85
    '@'   shift, and go to state 45


State 63

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   40     | expr BOR expr .  [REL_OPT, OR, AND, BOR, ';', ')', ':']
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token BOR resolved as reduce (%left BOR).
    Conflict between rule 40 and token BAND resolved as shift (BOR < BAND).
    Conflict between rule 40 and token BXOR resolved as shift (BOR < BXOR).
    Conflict between rule 40 and token '+' resolved as shift (BOR < '+').
    Conflict between rule 40 and token '-' resolved as shift (BOR < '-').
    Conflict between rule 40 and token '*' resolved as shift (BOR < '*').
    Conflict between rule 40 and token '/' resolved as shift (BOR < '/').
    Conflict between rule 40 and token '%' resolved as shift (BOR < '%').
    Conflict between rule 40 and token '@' resolved as shift (BOR < '@').


State 64

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   41     | expr BAND expr .  [REL_OPT, OR, AND, BOR, BAND, ';', ')', ':']
   42     | expr . BXOR expr

    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token BOR resolved as reduce (BOR < BAND).
    Conflict between rule 41 and token BAND resolved as reduce (%left BAND).
    Conflict between rule 41 and token BXOR resolved as shift (BAND < BXOR).
    Conflict between rule 41 and token '+' resolved as shift (BAND < '+').
    Conflict between rule 41 and token '-' resolved as shift (BAND < '-').
    Conflict between rule 41 and token '*' resolved as shift (BAND < '*').
    Conflict between rule 41 and token '/' resolved as shift (BAND < '/').
    Conflict between rule 41 and token '%' resolved as shift (BAND < '%').
    Conflict between rule 41 and token '@' resolved as shift (BAND < '@').


State 65

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr
   42     | expr BXOR expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, ';', ')', ':']

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    '%'  shift, and go to state 43
    '@'  shift, and go to state 45

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token BOR resolved as reduce (BOR < BXOR).
    Conflict between rule 42 and token BAND resolved as reduce (BAND < BXOR).
    Conflict between rule 42 and token BXOR resolved as reduce (%left BXOR).
    Conflict between rule 42 and token '+' resolved as shift (BXOR < '+').
    Conflict between rule 42 and token '-' resolved as shift (BXOR < '-').
    Conflict between rule 42 and token '*' resolved as shift (BXOR < '*').
    Conflict between rule 42 and token '/' resolved as shift (BXOR < '/').
    Conflict between rule 42 and token '%' resolved as shift (BXOR < '%').
    Conflict between rule 42 and token '@' resolved as shift (BXOR < '@').


State 66

   34 expr: expr . '+' expr
   34     | expr '+' expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, '+', '-', ';', ')', ':']
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    '%'  shift, and go to state 43
    '@'  shift, and go to state 45

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token BOR resolved as reduce (BOR < '+').
    Conflict between rule 34 and token BAND resolved as reduce (BAND < '+').
    Conflict between rule 34 and token BXOR resolved as reduce (BXOR < '+').
    Conflict between rule 34 and token '+' resolved as reduce (%left '+').
    Conflict between rule 34 and token '-' resolved as reduce (%left '-').
    Conflict between rule 34 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 34 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 34 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 34 and token '@' resolved as shift ('+' < '@').


State 67

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   35     | expr '-' expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, '+', '-', ';', ')', ':']
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    '%'  shift, and go to state 43
    '@'  shift, and go to state 45

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token BOR resolved as reduce (BOR < '-').
    Conflict between rule 35 and token BAND resolved as reduce (BAND < '-').
    Conflict between rule 35 and token BXOR resolved as reduce (BXOR < '-').
    Conflict between rule 35 and token '+' resolved as reduce (%left '+').
    Conflict between rule 35 and token '-' resolved as reduce (%left '-').
    Conflict between rule 35 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 35 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 35 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 35 and token '@' resolved as shift ('-' < '@').


State 68

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   36     | expr '*' expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, '+', '-', '*', '/', '%', ';', ')', ':']
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    '@'  shift, and go to state 45

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token BOR resolved as reduce (BOR < '*').
    Conflict between rule 36 and token BAND resolved as reduce (BAND < '*').
    Conflict between rule 36 and token BXOR resolved as reduce (BXOR < '*').
    Conflict between rule 36 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 36 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 36 and token '*' resolved as reduce (%left '*').
    Conflict between rule 36 and token '/' resolved as reduce (%left '/').
    Conflict between rule 36 and token '%' resolved as reduce (%left '%').
    Conflict between rule 36 and token '@' resolved as shift ('*' < '@').


State 69

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   37     | expr '/' expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, '+', '-', '*', '/', '%', ';', ')', ':']
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    '@'  shift, and go to state 45

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token BOR resolved as reduce (BOR < '/').
    Conflict between rule 37 and token BAND resolved as reduce (BAND < '/').
    Conflict between rule 37 and token BXOR resolved as reduce (BXOR < '/').
    Conflict between rule 37 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 37 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 37 and token '*' resolved as reduce (%left '*').
    Conflict between rule 37 and token '/' resolved as reduce (%left '/').
    Conflict between rule 37 and token '%' resolved as reduce (%left '%').
    Conflict between rule 37 and token '@' resolved as shift ('/' < '@').


State 70

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   38     | expr '%' expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, '+', '-', '*', '/', '%', ';', ')', ':']
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    '@'  shift, and go to state 45

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token BOR resolved as reduce (BOR < '%').
    Conflict between rule 38 and token BAND resolved as reduce (BAND < '%').
    Conflict between rule 38 and token BXOR resolved as reduce (BXOR < '%').
    Conflict between rule 38 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 38 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 38 and token '*' resolved as reduce (%left '*').
    Conflict between rule 38 and token '/' resolved as reduce (%left '/').
    Conflict between rule 38 and token '%' resolved as reduce (%left '%').
    Conflict between rule 38 and token '@' resolved as shift ('%' < '@').


State 71

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   39     | expr '@' expr .  [REL_OPT, OR, AND, BOR, BAND, BXOR, '+', '-', '*', '/', '%', ';', ')', ':']
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    '@'  shift, and go to state 45

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token BOR resolved as reduce (BOR < '@').
    Conflict between rule 39 and token BAND resolved as reduce (BAND < '@').
    Conflict between rule 39 and token BXOR resolved as reduce (BXOR < '@').
    Conflict between rule 39 and token '+' resolved as reduce ('+' < '@').
    Conflict between rule 39 and token '-' resolved as reduce ('-' < '@').
    Conflict between rule 39 and token '*' resolved as reduce ('*' < '@').
    Conflict between rule 39 and token '/' resolved as reduce ('/' < '@').
    Conflict between rule 39 and token '%' resolved as reduce ('%' < '@').
    Conflict between rule 39 and token '@' resolved as shift (%right '@').


State 72

   23 stmt: identifier PE expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 86
    '@'   shift, and go to state 45


State 73

   27 stmt: identifier INCR ';' .

    $default  reduce using rule 27 (stmt)


State 74

   28 stmt: identifier DECR ';' .

    $default  reduce using rule 28 (stmt)


State 75

   21 stmt: identifier '=' expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 87
    '@'   shift, and go to state 45


State 76

   24 stmt: identifier ME expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 88
    '@'   shift, and go to state 45


State 77

   25 stmt: identifier IE expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 89
    '@'   shift, and go to state 45


State 78

   26 stmt: identifier DE expr . ';'
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    ';'   shift, and go to state 90
    '@'   shift, and go to state 45


State 79

   30 boolean: . expr REL_OPT expr
   31        | . boolean OR boolean
   31        | boolean OR . boolean
   32        | . boolean AND boolean
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    boolean     go to state 91
    expr        go to state 54
    identifier  go to state 26
    number      go to state 20


State 80

   30 boolean: . expr REL_OPT expr
   31        | . boolean OR boolean
   32        | . boolean AND boolean
   32        | boolean AND . boolean
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    boolean     go to state 92
    expr        go to state 54
    identifier  go to state 26
    number      go to state 20


State 81

    5 construct: IF '(' boolean ')' . block
    7          | IF '(' boolean ')' . block ELSE block
    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9
    '{'    shift, and go to state 10

    block       go to state 93
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 82

   30 boolean: expr REL_OPT . expr
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 94
    identifier  go to state 26
    number      go to state 20


State 83

    6 construct: WHILE '(' boolean ')' . block
    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9
    '{'    shift, and go to state 10

    block       go to state 95
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 84

    8 construct: SWITCH '(' expr ')' . '{' caseList '}'

    '{'  shift, and go to state 96


State 85

   22 stmt: dec '=' expr ';' .

    $default  reduce using rule 22 (stmt)


State 86

   23 stmt: identifier PE expr ';' .

    $default  reduce using rule 23 (stmt)


State 87

   21 stmt: identifier '=' expr ';' .

    $default  reduce using rule 21 (stmt)


State 88

   24 stmt: identifier ME expr ';' .

    $default  reduce using rule 24 (stmt)


State 89

   25 stmt: identifier IE expr ';' .

    $default  reduce using rule 25 (stmt)


State 90

   26 stmt: identifier DE expr ';' .

    $default  reduce using rule 26 (stmt)


State 91

   31 boolean: boolean . OR boolean
   31        | boolean OR boolean .  [OR, ')']
   32        | boolean . AND boolean

    AND  shift, and go to state 80

    $default  reduce using rule 31 (boolean)

    Conflict between rule 31 and token OR resolved as reduce (%left OR).
    Conflict between rule 31 and token AND resolved as shift (OR < AND).


State 92

   31 boolean: boolean . OR boolean
   32        | boolean . AND boolean
   32        | boolean AND boolean .  [OR, AND, ')']

    $default  reduce using rule 32 (boolean)

    Conflict between rule 32 and token OR resolved as reduce (OR < AND).
    Conflict between rule 32 and token AND resolved as reduce (%left AND).


State 93

    5 construct: IF '(' boolean ')' block .  [$end, DIGIT, FLOAT, ID, IF, WHILE, TYPES, SWITCH, ';', '(', '{', '}']
    7          | IF '(' boolean ')' block . ELSE block

    ELSE  shift, and go to state 97

    $default  reduce using rule 5 (construct)


State 94

   30 boolean: expr REL_OPT expr .  [OR, AND, ')']
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45

    $default  reduce using rule 30 (boolean)


State 95

    6 construct: WHILE '(' boolean ')' block .

    $default  reduce using rule 6 (construct)


State 96

    8 construct: SWITCH '(' expr ')' '{' . caseList '}'
   13 caseList: . caseList CASE expr ':' block
   14         | . CASE expr ':' block

    CASE  shift, and go to state 98

    caseList  go to state 99


State 97

    7 construct: IF '(' boolean ')' block ELSE . block
    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9
    '{'    shift, and go to state 10

    block       go to state 100
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 98

   14 caseList: CASE . expr ':' block
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 101
    identifier  go to state 26
    number      go to state 20


State 99

    8 construct: SWITCH '(' expr ')' '{' caseList . '}'
   13 caseList: caseList . CASE expr ':' block

    CASE  shift, and go to state 102
    '}'   shift, and go to state 103


State 100

    7 construct: IF '(' boolean ')' block ELSE block .

    $default  reduce using rule 7 (construct)


State 101

   14 caseList: CASE expr . ':' block
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45
    ':'   shift, and go to state 104


State 102

   13 caseList: caseList CASE . expr ':' block
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    '('    shift, and go to state 9

    expr        go to state 105
    identifier  go to state 26
    number      go to state 20


State 103

    8 construct: SWITCH '(' expr ')' '{' caseList '}' .

    $default  reduce using rule 8 (construct)


State 104

    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   14 caseList: CASE expr ':' . block
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9
    '{'    shift, and go to state 10

    block       go to state 106
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 105

   13 caseList: caseList CASE expr . ':' block
   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | expr . '%' expr
   39     | expr . '@' expr
   40     | expr . BOR expr
   41     | expr . BAND expr
   42     | expr . BXOR expr

    BOR   shift, and go to state 36
    BAND  shift, and go to state 37
    BXOR  shift, and go to state 38
    '+'   shift, and go to state 39
    '-'   shift, and go to state 40
    '*'   shift, and go to state 41
    '/'   shift, and go to state 42
    '%'   shift, and go to state 43
    '@'   shift, and go to state 45
    ':'   shift, and go to state 107


State 106

   14 caseList: CASE expr ':' block .

    $default  reduce using rule 14 (caseList)


State 107

    9 block: . '{' list '}'
   10      | . '{' construct '}'
   11      | . '{' prog '}'
   12      | . list
   13 caseList: caseList CASE expr ':' . block
   15 list: . stmt
   16     | . list stmt
   17     | . list error '\n'
   18 stmt: . ';'
   19     | . expr ';'
   20     | . dec ';'
   21     | . identifier '=' expr ';'
   22     | . dec '=' expr ';'
   23     | . identifier PE expr ';'
   24     | . identifier ME expr ';'
   25     | . identifier IE expr ';'
   26     | . identifier DE expr ';'
   27     | . identifier INCR ';'
   28     | . identifier DECR ';'
   29 dec: . TYPES identifier
   33 expr: . '(' expr ')'
   34     | . expr '+' expr
   35     | . expr '-' expr
   36     | . expr '*' expr
   37     | . expr '/' expr
   38     | . expr '%' expr
   39     | . expr '@' expr
   40     | . expr BOR expr
   41     | . expr BAND expr
   42     | . expr BXOR expr
   43     | . identifier
   44     | . number
   45 identifier: . ID
   46 number: . DIGIT
   47       | . FLOAT

    DIGIT  shift, and go to state 1
    FLOAT  shift, and go to state 2
    ID     shift, and go to state 3
    TYPES  shift, and go to state 6
    ';'    shift, and go to state 8
    '('    shift, and go to state 9
    '{'    shift, and go to state 10

    block       go to state 108
    list        go to state 15
    stmt        go to state 16
    dec         go to state 17
    expr        go to state 18
    identifier  go to state 19
    number      go to state 20


State 108

   13 caseList: caseList CASE expr ':' block .

    $default  reduce using rule 13 (caseList)
